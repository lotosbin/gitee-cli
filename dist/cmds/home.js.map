{"version":3,"sources":["../../src/cmds/home.js"],"names":["cfg","git2http","git","test","replace","exports","command","desc","builder","yargs","reset","option","default","description","help","alias","handler","exec","silent","code","stdout","stderr","console","log","exit","remotes","split","map","s","t","name","url","http","action","filter","remote","argv","choice","prompt","type","message","choices","uniq","then","cmd","answers","echo"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAM,sBAAK,UAAL,CAAZ;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,QAAI,CAACA,GAAL,EAAU,OAAOA,GAAP;AACV,QAAI,SAASC,IAAT,CAAcD,GAAd,CAAJ,EACI,OAAOA,IAAIE,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,EAAsBA,OAAtB,CAA8B,MAA9B,EAAsC,SAAtC,CAAP;AACJ,WAAOF,GAAP;AACH;;AAEDG,QAAQC,OAAR,GAAkB,MAAlB;AACAD,QAAQE,IAAR,GAAe,2BAAf;AACAF,QAAQG,OAAR,GAAkB;AAAA,WAASC,MAAMC,KAAN,GACtBC,MADsB,CACf,QADe,EACL;AACdC,iBAAS,QADK;AAEdC,qBAAa;AAFC,KADK,EAKtBF,MALsB,CAKf,QALe,EAKL;AACdE,qBAAa;AADC,KALK,EAQtBC,IARsB,CAQjB,GARiB,EAStBC,KATsB,CAShB,GATgB,EASX,MATW,CAAT;AAAA,CAAlB;AAUAV,QAAQW,OAAR,GAAkB,gBAAQ;AACtBC,SAAK,eAAL,EAAsB,EAACC,QAAQ,IAAT,EAAtB,EAAsC,UAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,EAA0B;AAC5D,YAAIF,SAAS,CAAb,EAAgB;AACZG,oBAAQC,GAAR,CAAYF,MAAZ;AACA,8BAAMG,IAAN,CAAW,CAAX;AACA;AACH;AACD,YAAMC,UAAUL,OAAOM,KAAP,CAAa,IAAb,CAAhB;AACA,YAAMC,MAAMF,QAAQE,GAAR,CAAY,aAAK;AACzB,gBAAMC,IAAIC,EAAEH,KAAF,CAAQ,QAAR,CAAV;AACA,mBAAO,EAACI,MAAMF,EAAE,CAAF,CAAP,EAAaG,KAAKH,EAAE,CAAF,CAAlB,EAAwBI,MAAM/B,SAAS2B,EAAE,CAAF,CAAT,CAA9B,EAA8CK,QAAQL,EAAE,CAAF,CAAtD,EAAP;AACH,SAHW,EAGTM,MAHS,CAGF;AAAA,mBAAKL,EAAEC,IAAP;AAAA,SAHE,CAAZ;;AAKA,YAAMK,SAASR,IAAIO,MAAJ,CAAW;AAAA,mBAAKL,EAAEC,IAAF,KAAWM,KAAKD,MAArB;AAAA,SAAX,CAAf;AACA,YAAIC,KAAKC,MAAT,EAAiB;AACb,+BACKC,MADL,CACY,CAAC;AACLC,sBAAM,MADD;AAELT,sBAAM,QAFD;AAGLU,yBAAS,wBAHJ;AAILC,yBAAS,iBAAEC,IAAF,CAAOf,IAAIA,GAAJ,CAAQ;AAAA,2BAAKE,EAAEG,IAAP;AAAA,iBAAR,CAAP;AAJJ,aAAD,CADZ,EAOKW,IAPL,CAOU,mBAAW;AACb,oBAAIC,MAAM,UAAU3C,SAAS4C,QAAQV,MAAjB,CAApB;AACAW,qBAAKF,GAAL;AACA,kCAAM3B,IAAN,CAAW2B,GAAX;AACH,aAXL;AAYH,SAbD,MAaO;AACH,gBAAIA,MAAM,UAAU3C,SAASkC,OAAO,CAAP,EAAUJ,GAAnB,CAApB;AACAe,iBAAKF,GAAL;AACA,8BAAM3B,IAAN,CAAW2B,GAAX;AACH;AACJ,KA/BD;AAgCH,CAjCD","file":"home.js","sourcesContent":["import shelljs from \"shelljs/global\";\nimport _ from \"lodash\";\nimport inquirer from \"inquirer\";\nimport {load} from \"home-config\";\nimport shell from \"shelljs\";\n\nconst cfg = load('.oschina');\n\nfunction git2http(git) {\n    if (!git) return git;\n    if (/^git\\@/.test(git))\n        return git.replace(\":\", \"/\").replace('git@', 'http://');\n    return git;\n}\n\nexports.command = 'home';\nexports.desc = 'open repository home page';\nexports.builder = yargs => yargs.reset()\n    .option('remote', {\n        default: 'origin',\n        description: 'specific remote name'\n    })\n    .option('choice', {\n        description: 'use choice for multi remote'\n    })\n    .help(\"h\")\n    .alias(\"h\", \"help\");\nexports.handler = argv => {\n    exec('git remote -v', {silent: true}, (code, stdout, stderr) => {\n        if (code !== 0) {\n            console.log(stderr);\n            shell.exit(1);\n            return\n        }\n        const remotes = stdout.split('\\n');\n        const map = remotes.map(t => {\n            const s = t.split(/[\\ \\t]/);\n            return {name: s[0], url: s[1], http: git2http(s[1]), action: s[2]}\n        }).filter(t => t.name);\n\n        const remote = map.filter(t => t.name === argv.remote);\n        if (argv.choice) {\n            inquirer\n                .prompt([{\n                    type: \"list\",\n                    name: \"remote\",\n                    message: \"select remote to open?\",\n                    choices: _.uniq(map.map(t => t.http))\n                }])\n                .then(answers => {\n                    let cmd = 'open ' + git2http(answers.remote);\n                    echo(cmd);\n                    shell.exec(cmd)\n                })\n        } else {\n            let cmd = 'open ' + git2http(remote[0].url);\n            echo(cmd);\n            shell.exec(cmd)\n        }\n    })\n};\n"]}